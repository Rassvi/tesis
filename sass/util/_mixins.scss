@use 'variables' as variables;
// Mixins para media responsive: :D

@mixin xs {

  // Extra Small
  @media (min-width: 0px) {
    @content;
  }
}

@mixin sm {

  // Small
  @media (min-width: 480px) {
    @content;
  }
}

@mixin md {

  // Medium
  @media (min-width: 760px) {
    @content;
  }
}

@mixin lg {

  // Large
  @media (min-width: 1200px) {
    @content;
  }
}

@mixin xl {

  // Extra large
  @media (min-width: 1360px) {
    @content;
  }
}

@mixin breakpoint ($width) {

  // Breakpoint flexible
  @media (min-width: $width) {
    @content;
  }
}

// Mixins extras:

@mixin crear-propiedad($map, $bp: "") {

  @each $propiedad,
  $valores in $map {
    $prefijo: map-get($valores, "prefix"); // Adquiere el valor que tenga "prefix" dentro del mapa anidado.
    $sub-mapa: map-get($valores, "values"); // Toma los valores del mapa anidado y se vuele un mapa
    // Se encarga de recorrer, el mapa que adquiri√≥ la $valor

    @each $modificador,
    $valores in $sub-mapa {
      @if ($modificador =="default") {

        // Si el modificador es un valor por defecto.
        .#{$prefijo}#{$bp} {
          // Simplemente se le da el nombre del prefijo
          #{$propiedad}: $valores;
        }
      }

      @else {
        .#{$prefijo}#{$bp}--#{$modificador} {
          #{$propiedad}: $valores;
        }
      }
    }
  }
}

@mixin col ($width: 100%) {
  flex-grow: 0;
  width: $width;
}

@mixin borders ($width, $style, $color: variables.$secondary) {
  border-width: $width * 1px; // *1px para convertir x unidad a px
  border-style: $style; // recibe el estilo de borde.
  border-color: $color;
}

@mixin shadow ($color) {
  box-shadow: variables.$base-shadow $blur-r $spread $color;
}